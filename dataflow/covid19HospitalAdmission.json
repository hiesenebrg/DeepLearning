{
	"name": "covid19HospitalAdmission",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText10",
						"type": "DatasetReference"
					},
					"name": "HospitalAdmissionSource"
				},
				{
					"dataset": {
						"referenceName": "ds_country_lookup",
						"type": "DatasetReference"
					},
					"name": "Countrylookup"
				},
				{
					"dataset": {
						"referenceName": "dimdatelookup",
						"type": "DatasetReference"
					},
					"name": "DImDateSource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "weekly_sink",
						"type": "DatasetReference"
					},
					"name": "WeeklySink"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText12",
						"type": "DatasetReference"
					},
					"name": "sinkDaily"
				}
			],
			"transformations": [
				{
					"name": "selectRequiredField"
				},
				{
					"name": "lookupcouontry"
				},
				{
					"name": "selectRequiredFields"
				},
				{
					"name": "SpiltDailyfromWeekly"
				},
				{
					"name": "AggDimDate"
				},
				{
					"name": "JoinWithDate"
				},
				{
					"name": "PivotWeekly"
				},
				{
					"name": "pivotDaily"
				},
				{
					"name": "sortWeekly"
				},
				{
					"name": "sortDaily"
				},
				{
					"name": "selectWeekly"
				},
				{
					"name": "selectDaily"
				}
			],
			"scriptLines": [
				"source(output(",
				"          country as string,",
				"          indicator as string,",
				"          date as date,",
				"          year_week as string,",
				"          value as double,",
				"          source as string,",
				"          url as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> HospitalAdmissionSource",
				"source(output(",
				"          country as string,",
				"          country_code_3_digit as string,",
				"          country_code_2_digit as string,",
				"          continent as string,",
				"          population as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Countrylookup",
				"source(output(",
				"          date_key as string,",
				"          date as string,",
				"          year as string,",
				"          month as string,",
				"          day as string,",
				"          day_name as string,",
				"          day_of_year as string,",
				"          week_of_month as string,",
				"          week_of_year as string,",
				"          month_name as string,",
				"          year_month as string,",
				"          year_week as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DImDateSource",
				"HospitalAdmissionSource select(mapColumn(",
				"          country,",
				"          indicator,",
				"          reorted_date = date,",
				"          reported_year_week = year_week,",
				"          value,",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectRequiredField",
				"selectRequiredField, Countrylookup lookup(selectRequiredField@country == Countrylookup@country,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookupcouontry",
				"lookupcouontry select(mapColumn(",
				"          country = selectRequiredField@country,",
				"          indicator,",
				"          reorted_date,",
				"          reported_year_week,",
				"          value,",
				"          source,",
				"          country = Countrylookup@country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectRequiredFields",
				"selectRequiredFields split(indicator=='Weekly new hospital admissions per 100K' || indicator== 'Weekly new ICU Admissions per 100K',",
				"     disjoint: true) ~> SpiltDailyfromWeekly@(Weekly, Daily)",
				"DImDateSource aggregate(groupBy(ecdc_year_week = year+'-W'+lpad(week_of_year,2,'0')),",
				"     week_start_date = min(date),",
				"          week_end_date = max(date)) ~> AggDimDate",
				"SpiltDailyfromWeekly@Weekly, AggDimDate join(reported_year_week == ecdc_year_week,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinWithDate",
				"JoinWithDate pivot(groupBy(country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          reported_year_week,",
				"          week_start_date,",
				"          week_end_date,",
				"          source),",
				"     pivotBy(indicator, ['Weekly new hospital admissions per 100K', 'Weekly new ICU admissoin per 100K']),",
				"     count = sum(value),",
				"     columnNaming: '$V _$N',",
				"     lateral: true) ~> PivotWeekly",
				"SpiltDailyfromWeekly@Daily pivot(groupBy(country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          reorted_date,",
				"          source),",
				"     pivotBy(indicator, ['Daily hospital occupancy', 'Daily ICU occupancy']),",
				"     count = sum(value),",
				"     columnNaming: '$V _$N',",
				"     lateral: true) ~> pivotDaily",
				"PivotWeekly sort(desc(reported_year_week, true),",
				"     asc(country, true)) ~> sortWeekly",
				"pivotDaily sort(asc(country, true),",
				"     desc(reorted_date, true)) ~> sortDaily",
				"sortWeekly select(mapColumn(",
				"          country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          reported_year_week,",
				"          reported_week_start_date = week_start_date,",
				"          reported_week_end_date = week_end_date,",
				"          new_hosppital_occupancy_count = {Weekly new hospital admissions per 100K _count},",
				"          new_icu_occupancy_count = {Weekly new ICU admissoin per 100K _count},",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectWeekly",
				"sortDaily select(mapColumn(",
				"          country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          reorted_date,",
				"          {hospital occupancy _count} = {Daily hospital occupancy _count},",
				"          {ICU occupancy _count} = {Daily ICU occupancy _count},",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectDaily",
				"selectWeekly sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:[''],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> WeeklySink",
				"selectDaily sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:[''],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sinkDaily"
			]
		}
	}
}